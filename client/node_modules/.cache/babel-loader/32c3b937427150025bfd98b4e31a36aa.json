{"ast":null,"code":"import axios from \"axios\";\nexport const GET_ALL_RECIPES = \"GET_ALL_RECIPES\";\nexport const GET_ID_RECIPES = \"GET_ID_RECIPES\";\nexport const GET_NAME_RECIPES = \"GET_NAME_RECIPES\";\nexport const GET_ALL_DIETS = \"GET_ALL_DIETS\";\nexport const CREATE_RECIPE = \"CREATE_RECIPE\";\nexport const FILTER_DIETS = \"FILTER_DIETS\";\nexport const UPDATE_SELECTED_DIETS = \"UPDATE_SELECTED_DIETS\";\nexport const FILTER_TYPE = \"FILTER_TYPE\";\nexport const ORDERING = \"ORDERING\";\nexport const VALIDATION_ERRORS = \"VALIDATION_ERRORS\";\nconst URL_END = \"https://pi-food-ytwm.onrender.com/\";\n\n// Para llamar las recetas por id\n\nexport const getIdRecipes = id => {\n  return async dispatch => {\n    try {\n      const endPoint = `${URL_END}/recipes/${id}`;\n      const response = await axios.get(endPoint);\n      return dispatch({\n        type: GET_ID_RECIPES,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n};\n\n// Para llamar las recetas por nombre y si no se pasa nombre se llama a todas\n\nexport const getAllRecipes = name => {\n  return async dispatch => {\n    try {\n      const endPoint = name ? `${URL_END}/recipes?name=${name}` : `${URL_END}/recipes/`;\n      const response = await axios.get(endPoint);\n      return dispatch({\n        type: GET_NAME_RECIPES,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(error.message);\n      throw error;\n    }\n  };\n};\n\n// Para llamar a todas las dietas\n\nexport const getAllDiets = () => {\n  return async dispatch => {\n    try {\n      const endPoint = `${URL_END}/diets/`;\n      const response = await axios(endPoint);\n      return dispatch({\n        type: GET_ALL_DIETS,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n};\n\n// Para crear una receta\n\nexport const createRecipe = obj => {\n  return async dispatch => {\n    try {\n      const endPoint = `${URL_END}/diets/`;\n      const response = await axios.post(endPoint, obj);\n      return dispatch({\n        type: CREATE_RECIPE,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n};\n\n// Para ordenar las recetas\n\nexport const orderRecipes = value => {\n  return {\n    type: ORDERING,\n    payload: value\n  };\n};\n\n// Para saber cuales son las dietas seleccionadas para el filtro\n\nexport const updateSelectedDiets = selectedDiets => {\n  return {\n    type: UPDATE_SELECTED_DIETS,\n    payload: {\n      selectedDiets\n    }\n  };\n};\n\n// Para filtrar por dietas\n\nexport const filterDietsRecipes = () => {\n  return {\n    type: FILTER_DIETS\n  };\n};\n\n// Para filtrar por tipo\n\nexport const filterTypeRecipes = value => {\n  return {\n    type: FILTER_TYPE,\n    payload: value\n  };\n};\n\n// Para guardar los errores de las validaciones del form\n\nexport const setValidationErrors = obj => {\n  return {\n    type: VALIDATION_ERRORS,\n    payload: obj\n  };\n};","map":{"version":3,"names":["axios","GET_ALL_RECIPES","GET_ID_RECIPES","GET_NAME_RECIPES","GET_ALL_DIETS","CREATE_RECIPE","FILTER_DIETS","UPDATE_SELECTED_DIETS","FILTER_TYPE","ORDERING","VALIDATION_ERRORS","URL_END","getIdRecipes","id","dispatch","endPoint","response","get","type","payload","data","error","console","log","message","getAllRecipes","name","getAllDiets","createRecipe","obj","post","orderRecipes","value","updateSelectedDiets","selectedDiets","filterDietsRecipes","filterTypeRecipes","setValidationErrors"],"sources":["C:/Users/joaki/OneDrive/Escritorio/Develop/Proyectos personales/Food/PI-Main_food/client/src/redux/actions.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const GET_ALL_RECIPES = \"GET_ALL_RECIPES\";\r\nexport const GET_ID_RECIPES = \"GET_ID_RECIPES\";\r\nexport const GET_NAME_RECIPES = \"GET_NAME_RECIPES\";\r\nexport const GET_ALL_DIETS = \"GET_ALL_DIETS\";\r\nexport const CREATE_RECIPE = \"CREATE_RECIPE\";\r\nexport const FILTER_DIETS = \"FILTER_DIETS\";\r\nexport const UPDATE_SELECTED_DIETS = \"UPDATE_SELECTED_DIETS\";\r\nexport const FILTER_TYPE = \"FILTER_TYPE\";\r\nexport const ORDERING = \"ORDERING\";\r\nexport const VALIDATION_ERRORS = \"VALIDATION_ERRORS\";\r\n\r\nconst URL_END = \"https://pi-food-ytwm.onrender.com/\";\r\n\r\n// Para llamar las recetas por id\r\n\r\nexport const getIdRecipes = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const endPoint = `${URL_END}/recipes/${id}`;\r\n      const response = await axios.get(endPoint);\r\n      return dispatch({\r\n        type: GET_ID_RECIPES,\r\n        payload: response.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n};\r\n\r\n// Para llamar las recetas por nombre y si no se pasa nombre se llama a todas\r\n\r\nexport const getAllRecipes = (name) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const endPoint = name\r\n        ? `${URL_END}/recipes?name=${name}`\r\n        : `${URL_END}/recipes/`;\r\n      const response = await axios.get(endPoint);\r\n      return dispatch({\r\n        type: GET_NAME_RECIPES,\r\n        payload: response.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      throw error;\r\n    }\r\n  };\r\n};\r\n\r\n// Para llamar a todas las dietas\r\n\r\nexport const getAllDiets = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const endPoint = `${URL_END}/diets/`;\r\n      const response = await axios(endPoint);\r\n      return dispatch({\r\n        type: GET_ALL_DIETS,\r\n        payload: response.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n};\r\n\r\n// Para crear una receta\r\n\r\nexport const createRecipe = (obj) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const endPoint = `${URL_END}/diets/`;\r\n      const response = await axios.post(endPoint, obj);\r\n      return dispatch({\r\n        type: CREATE_RECIPE,\r\n        payload: response.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n};\r\n\r\n// Para ordenar las recetas\r\n\r\nexport const orderRecipes = (value) => {\r\n  return {\r\n    type: ORDERING,\r\n    payload: value,\r\n  };\r\n};\r\n\r\n// Para saber cuales son las dietas seleccionadas para el filtro\r\n\r\nexport const updateSelectedDiets = (selectedDiets) => {\r\n  return {\r\n    type: UPDATE_SELECTED_DIETS,\r\n    payload: { selectedDiets },\r\n  };\r\n};\r\n\r\n// Para filtrar por dietas\r\n\r\nexport const filterDietsRecipes = () => {\r\n  return {\r\n    type: FILTER_DIETS,\r\n  };\r\n};\r\n\r\n// Para filtrar por tipo\r\n\r\nexport const filterTypeRecipes = (value) => {\r\n  return {\r\n    type: FILTER_TYPE,\r\n    payload: value,\r\n  };\r\n};\r\n\r\n// Para guardar los errores de las validaciones del form\r\n\r\nexport const setValidationErrors = (obj) => {\r\n  return {\r\n    type: VALIDATION_ERRORS,\r\n    payload: obj,\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}