{"ast":null,"code":"export default function Validations(type,errors,setErrors){var validateURL=/^(ftp|http|https):\\/\\/[^ \"]+$/;var validateName=/^[a-zA-Z\\s]*$/;var validateNumber=/^\\d*$/;var validateNumberFloat=/^\\d+(\\.\\d+)*$/;// Recipe Name Validation:\nif(type.name.length){console.log('entro name');if(type.name.length>30){setErrors({name:\"* The title must have at most 30 characters\"});}else if(validateName.test(type.name)===false){setErrors({name:\"* The title can only contain letters\"});}else{setErrors({name:\"\"});}}// Recipe Price Validation:\nif(type.price.length){if(validateNumberFloat.test(type.price)===false){setErrors({price:\"* The price can only contain numbers\"});}else if(type.price.length>9){setErrors({price:\"* The price is too big\"});}else{setErrors({price:\"\"});}}// Recipe Image Validation:\nif(type.image.length){if(validateURL.test(type.image)===false){setErrors({image:\"* The image url its invalid\"});}else{setErrors({image:\"\"});}}// Recipe Health Score Validation:\nif(type.healthScore.length){if(validateNumber.test(type.healthScore)===false){setErrors({healthScore:\"* The Health Score can only contain numbers\"});}else if(type.healthScore>100){setErrors({healthScore:\"* The Health Score is too much\"});}else{setErrors({healthScore:\"\"});}}// Recipe Summary Validation:\nif(type.summary.length){if(type.summary.length>80){setErrors({summary:\"* The summary must have at most 80 characters\"});}else{setErrors({summary:\"\"});}}// Recipe Step By Step Validation:\nif(type.stepByStep.length){if(type.stepByStep.length>620){setErrors({stepByStep:\"* The step by step must have at most 620 characters\"});}else{setErrors({stepByStep:\"\"});}}}","map":{"version":3,"names":["Validations","type","errors","setErrors","validateURL","validateName","validateNumber","validateNumberFloat","name","length","console","log","test","price","image","healthScore","summary","stepByStep"],"sources":["/home/j0aki/Desktop/Develop/Henry/PI-Food-main/client/src/components/Form/Validations.js"],"sourcesContent":["    export default function Validations (type, errors, setErrors) {\n      const validateURL = /^(ftp|http|https):\\/\\/[^ \"]+$/;\n      const validateName = /^[a-zA-Z\\s]*$/;\n      const validateNumber = /^\\d*$/;\n      const validateNumberFloat = /^\\d+(\\.\\d+)*$/;\n\n      // Recipe Name Validation:\n\n      if (type.name.length) {\n        console.log('entro name')\n\n        if (type.name.length > 30) {\n          setErrors({\n            name: \"* The title must have at most 30 characters\",\n          });\n        } else if (validateName.test(type.name) === false) {\n          setErrors({\n            name: \"* The title can only contain letters\",\n          });\n        } else {\n          setErrors({\n            name: \"\",\n          });\n        }\n      }\n\n      // Recipe Price Validation:\n\n      if (type.price.length) {\n        if (validateNumberFloat.test(type.price) === false) {\n          setErrors({\n            price: \"* The price can only contain numbers\",\n          });\n        } else if (type.price.length > 9) {\n          setErrors({\n            price: \"* The price is too big\",\n          });\n        } else {\n          setErrors({\n            price: \"\",\n          });\n        }\n      }\n\n      // Recipe Image Validation:\n\n      if (type.image.length) {\n        if (validateURL.test(type.image) === false) {\n          setErrors({\n            image: \"* The image url its invalid\",\n          });\n        } else {\n          setErrors({\n            image: \"\",\n          });\n        }\n      }\n\n      // Recipe Health Score Validation:\n\n      if (type.healthScore.length) {\n        if (validateNumber.test(type.healthScore) === false) {\n          setErrors({\n            healthScore: \"* The Health Score can only contain numbers\",\n          });\n        } else if (type.healthScore > 100) {\n          setErrors({\n            healthScore: \"* The Health Score is too much\",\n          });\n        } else {\n          setErrors({\n            healthScore: \"\",\n          });\n        }\n      }\n\n      // Recipe Summary Validation:\n\n      if (type.summary.length) {\n        if (type.summary.length > 80) {\n          setErrors({\n            summary: \"* The summary must have at most 80 characters\",\n          });\n        } else {\n          setErrors({\n            summary: \"\",\n          });\n        }\n      }\n\n      // Recipe Step By Step Validation:\n\n      if (type.stepByStep.length) {\n        if (type.stepByStep.length > 620) {\n          setErrors({\n            stepByStep: \"* The step by step must have at most 620 characters\",\n          });\n        } else {\n          setErrors({\n            stepByStep: \"\",\n          });\n        }\n      }\n    }"],"mappings":"AAAI,cAAe,SAAS,CAAAA,WAAWA,CAAEC,IAAI,CAAEC,MAAM,CAAEC,SAAS,CAAE,CAC5D,GAAM,CAAAC,WAAW,CAAG,+BAA+B,CACnD,GAAM,CAAAC,YAAY,CAAG,eAAe,CACpC,GAAM,CAAAC,cAAc,CAAG,OAAO,CAC9B,GAAM,CAAAC,mBAAmB,CAAG,eAAe,CAE3C;AAEA,GAAIN,IAAI,CAACO,IAAI,CAACC,MAAM,CAAE,CACpBC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC,CAEzB,GAAIV,IAAI,CAACO,IAAI,CAACC,MAAM,CAAG,EAAE,CAAE,CACzBN,SAAS,CAAC,CACRK,IAAI,CAAE,6CACR,CAAC,CAAC,CACJ,CAAC,IAAM,IAAIH,YAAY,CAACO,IAAI,CAACX,IAAI,CAACO,IAAI,CAAC,GAAK,KAAK,CAAE,CACjDL,SAAS,CAAC,CACRK,IAAI,CAAE,sCACR,CAAC,CAAC,CACJ,CAAC,IAAM,CACLL,SAAS,CAAC,CACRK,IAAI,CAAE,EACR,CAAC,CAAC,CACJ,CACF,CAEA;AAEA,GAAIP,IAAI,CAACY,KAAK,CAACJ,MAAM,CAAE,CACrB,GAAIF,mBAAmB,CAACK,IAAI,CAACX,IAAI,CAACY,KAAK,CAAC,GAAK,KAAK,CAAE,CAClDV,SAAS,CAAC,CACRU,KAAK,CAAE,sCACT,CAAC,CAAC,CACJ,CAAC,IAAM,IAAIZ,IAAI,CAACY,KAAK,CAACJ,MAAM,CAAG,CAAC,CAAE,CAChCN,SAAS,CAAC,CACRU,KAAK,CAAE,wBACT,CAAC,CAAC,CACJ,CAAC,IAAM,CACLV,SAAS,CAAC,CACRU,KAAK,CAAE,EACT,CAAC,CAAC,CACJ,CACF,CAEA;AAEA,GAAIZ,IAAI,CAACa,KAAK,CAACL,MAAM,CAAE,CACrB,GAAIL,WAAW,CAACQ,IAAI,CAACX,IAAI,CAACa,KAAK,CAAC,GAAK,KAAK,CAAE,CAC1CX,SAAS,CAAC,CACRW,KAAK,CAAE,6BACT,CAAC,CAAC,CACJ,CAAC,IAAM,CACLX,SAAS,CAAC,CACRW,KAAK,CAAE,EACT,CAAC,CAAC,CACJ,CACF,CAEA;AAEA,GAAIb,IAAI,CAACc,WAAW,CAACN,MAAM,CAAE,CAC3B,GAAIH,cAAc,CAACM,IAAI,CAACX,IAAI,CAACc,WAAW,CAAC,GAAK,KAAK,CAAE,CACnDZ,SAAS,CAAC,CACRY,WAAW,CAAE,6CACf,CAAC,CAAC,CACJ,CAAC,IAAM,IAAId,IAAI,CAACc,WAAW,CAAG,GAAG,CAAE,CACjCZ,SAAS,CAAC,CACRY,WAAW,CAAE,gCACf,CAAC,CAAC,CACJ,CAAC,IAAM,CACLZ,SAAS,CAAC,CACRY,WAAW,CAAE,EACf,CAAC,CAAC,CACJ,CACF,CAEA;AAEA,GAAId,IAAI,CAACe,OAAO,CAACP,MAAM,CAAE,CACvB,GAAIR,IAAI,CAACe,OAAO,CAACP,MAAM,CAAG,EAAE,CAAE,CAC5BN,SAAS,CAAC,CACRa,OAAO,CAAE,+CACX,CAAC,CAAC,CACJ,CAAC,IAAM,CACLb,SAAS,CAAC,CACRa,OAAO,CAAE,EACX,CAAC,CAAC,CACJ,CACF,CAEA;AAEA,GAAIf,IAAI,CAACgB,UAAU,CAACR,MAAM,CAAE,CAC1B,GAAIR,IAAI,CAACgB,UAAU,CAACR,MAAM,CAAG,GAAG,CAAE,CAChCN,SAAS,CAAC,CACRc,UAAU,CAAE,qDACd,CAAC,CAAC,CACJ,CAAC,IAAM,CACLd,SAAS,CAAC,CACRc,UAAU,CAAE,EACd,CAAC,CAAC,CACJ,CACF,CACF"},"metadata":{},"sourceType":"module"}