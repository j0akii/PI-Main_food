{"ast":null,"code":"var React = require('react');\nvar styleToJS = require('style-to-js').default;\n\n/**\r\n * Swap key with value in an object.\r\n *\r\n * @param {object} obj - The object.\r\n * @param {Function} [override] - The override method.\r\n * @returns - The inverted object.\r\n */\nfunction invertObject(obj, override) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('First argument must be an object');\n  }\n  var key;\n  var value;\n  var isOverridePresent = typeof override === 'function';\n  var overrides = {};\n  var result = {};\n  for (key in obj) {\n    value = obj[key];\n    if (isOverridePresent) {\n      overrides = override(key, value);\n      if (overrides && overrides.length === 2) {\n        result[overrides[0]] = overrides[1];\n        continue;\n      }\n    }\n    if (typeof value === 'string') {\n      result[value] = key;\n    }\n  }\n  return result;\n}\n\n/**\r\n * Check if a given tag is a custom component.\r\n *\r\n * @see {@link https://github.com/facebook/react/blob/v16.6.3/packages/react-dom/src/shared/isCustomComponent.js}\r\n *\r\n * @param {string} tagName - The name of the html tag.\r\n * @param {object} props - The props being passed to the element.\r\n * @returns - Whether tag is custom component.\r\n */\nfunction isCustomComponent(tagName, props) {\n  if (tagName.indexOf('-') === -1) {\n    return props && typeof props.is === 'string';\n  }\n  switch (tagName) {\n    // These are reserved SVG and MathML elements.\n    // We don't mind this whitelist too much because we expect it to never grow.\n    // The alternative is to track the namespace in a few places which is convoluted.\n    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\n    case 'annotation-xml':\n    case 'color-profile':\n    case 'font-face':\n    case 'font-face-src':\n    case 'font-face-uri':\n    case 'font-face-format':\n    case 'font-face-name':\n    case 'missing-glyph':\n      return false;\n    default:\n      return true;\n  }\n}\nvar styleToJSOptions = {\n  reactCompat: true\n};\n\n/**\r\n * Sets style prop.\r\n *\r\n * @param {null|undefined|string} style\r\n * @param {object} props\r\n */\nfunction setStyleProp(style, props) {\n  if (style === null || style === undefined) {\n    return;\n  }\n  try {\n    props.style = styleToJS(style, styleToJSOptions);\n  } catch (err) {\n    props.style = {};\n  }\n}\n\n/**\r\n * @constant {boolean}\r\n * @see {@link https://reactjs.org/blog/2017/09/08/dom-attributes-in-react-16.html}\r\n */\nvar PRESERVE_CUSTOM_ATTRIBUTES = React.version.split('.')[0] >= 16;\n\n// Taken from\n// https://github.com/facebook/react/blob/cae635054e17a6f107a39d328649137b83f25972/packages/react-dom/src/client/validateDOMNesting.js#L213\nvar elementsWithNoTextChildren = new Set(['tr', 'tbody', 'thead', 'tfoot', 'colgroup', 'table', 'head', 'html', 'frameset']);\n\n/**\r\n * Checks if the given node can contain text nodes\r\n *\r\n * @param {DomElement} node - Node.\r\n * @returns - Whether node can contain text nodes.\r\n */\nfunction canTextBeChildOfNode(node) {\n  return !elementsWithNoTextChildren.has(node.name);\n}\nmodule.exports = {\n  PRESERVE_CUSTOM_ATTRIBUTES: PRESERVE_CUSTOM_ATTRIBUTES,\n  invertObject: invertObject,\n  isCustomComponent: isCustomComponent,\n  setStyleProp: setStyleProp,\n  canTextBeChildOfNode: canTextBeChildOfNode,\n  elementsWithNoTextChildren: elementsWithNoTextChildren\n};","map":{"version":3,"names":["React","require","styleToJS","default","invertObject","obj","override","TypeError","key","value","isOverridePresent","overrides","result","length","isCustomComponent","tagName","props","indexOf","is","styleToJSOptions","reactCompat","setStyleProp","style","undefined","err","PRESERVE_CUSTOM_ATTRIBUTES","version","split","elementsWithNoTextChildren","Set","canTextBeChildOfNode","node","has","name","module","exports"],"sources":["C:/Users/joaki/OneDrive/Escritorio/Develop/Proyectos personales/Food/PI-Main_food/client/node_modules/html-react-parser/lib/utilities.js"],"sourcesContent":["var React = require('react');\r\nvar styleToJS = require('style-to-js').default;\r\n\r\n/**\r\n * Swap key with value in an object.\r\n *\r\n * @param {object} obj - The object.\r\n * @param {Function} [override] - The override method.\r\n * @returns - The inverted object.\r\n */\r\nfunction invertObject(obj, override) {\r\n  if (!obj || typeof obj !== 'object') {\r\n    throw new TypeError('First argument must be an object');\r\n  }\r\n\r\n  var key;\r\n  var value;\r\n  var isOverridePresent = typeof override === 'function';\r\n  var overrides = {};\r\n  var result = {};\r\n\r\n  for (key in obj) {\r\n    value = obj[key];\r\n\r\n    if (isOverridePresent) {\r\n      overrides = override(key, value);\r\n      if (overrides && overrides.length === 2) {\r\n        result[overrides[0]] = overrides[1];\r\n        continue;\r\n      }\r\n    }\r\n\r\n    if (typeof value === 'string') {\r\n      result[value] = key;\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Check if a given tag is a custom component.\r\n *\r\n * @see {@link https://github.com/facebook/react/blob/v16.6.3/packages/react-dom/src/shared/isCustomComponent.js}\r\n *\r\n * @param {string} tagName - The name of the html tag.\r\n * @param {object} props - The props being passed to the element.\r\n * @returns - Whether tag is custom component.\r\n */\r\nfunction isCustomComponent(tagName, props) {\r\n  if (tagName.indexOf('-') === -1) {\r\n    return props && typeof props.is === 'string';\r\n  }\r\n\r\n  switch (tagName) {\r\n    // These are reserved SVG and MathML elements.\r\n    // We don't mind this whitelist too much because we expect it to never grow.\r\n    // The alternative is to track the namespace in a few places which is convoluted.\r\n    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\r\n    case 'annotation-xml':\r\n    case 'color-profile':\r\n    case 'font-face':\r\n    case 'font-face-src':\r\n    case 'font-face-uri':\r\n    case 'font-face-format':\r\n    case 'font-face-name':\r\n    case 'missing-glyph':\r\n      return false;\r\n    default:\r\n      return true;\r\n  }\r\n}\r\n\r\nvar styleToJSOptions = { reactCompat: true };\r\n\r\n/**\r\n * Sets style prop.\r\n *\r\n * @param {null|undefined|string} style\r\n * @param {object} props\r\n */\r\nfunction setStyleProp(style, props) {\r\n  if (style === null || style === undefined) {\r\n    return;\r\n  }\r\n  try {\r\n    props.style = styleToJS(style, styleToJSOptions);\r\n  } catch (err) {\r\n    props.style = {};\r\n  }\r\n}\r\n\r\n/**\r\n * @constant {boolean}\r\n * @see {@link https://reactjs.org/blog/2017/09/08/dom-attributes-in-react-16.html}\r\n */\r\nvar PRESERVE_CUSTOM_ATTRIBUTES = React.version.split('.')[0] >= 16;\r\n\r\n// Taken from\r\n// https://github.com/facebook/react/blob/cae635054e17a6f107a39d328649137b83f25972/packages/react-dom/src/client/validateDOMNesting.js#L213\r\nvar elementsWithNoTextChildren = new Set([\r\n  'tr',\r\n  'tbody',\r\n  'thead',\r\n  'tfoot',\r\n  'colgroup',\r\n  'table',\r\n  'head',\r\n  'html',\r\n  'frameset'\r\n]);\r\n\r\n/**\r\n * Checks if the given node can contain text nodes\r\n *\r\n * @param {DomElement} node - Node.\r\n * @returns - Whether node can contain text nodes.\r\n */\r\nfunction canTextBeChildOfNode(node) {\r\n  return !elementsWithNoTextChildren.has(node.name);\r\n}\r\n\r\nmodule.exports = {\r\n  PRESERVE_CUSTOM_ATTRIBUTES: PRESERVE_CUSTOM_ATTRIBUTES,\r\n  invertObject: invertObject,\r\n  isCustomComponent: isCustomComponent,\r\n  setStyleProp: setStyleProp,\r\n  canTextBeChildOfNode: canTextBeChildOfNode,\r\n  elementsWithNoTextChildren: elementsWithNoTextChildren\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}