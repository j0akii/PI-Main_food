{"ast":null,"code":"var domhandler = require('domhandler');\nvar htmlToDOM = require('html-dom-parser');\nvar attributesToProps = require('./lib/attributes-to-props');\nvar domToReact = require('./lib/dom-to-react');\n\n// support backwards compatibility for ES Module\nhtmlToDOM = /* istanbul ignore next */\ntypeof htmlToDOM.default === 'function' ? htmlToDOM.default : htmlToDOM;\nvar domParserOptions = {\n  lowerCaseAttributeNames: false\n};\n\n/**\r\n * Converts HTML string to React elements.\r\n *\r\n * @param {string} html - HTML string.\r\n * @param {object} [options] - Parser options.\r\n * @param {object} [options.htmlparser2] - htmlparser2 options.\r\n * @param {object} [options.library] - Library for React, Preact, etc.\r\n * @param {Function} [options.replace] - Replace method.\r\n * @returns {JSX.Element|JSX.Element[]|string} - React element(s), empty array, or string.\r\n */\nfunction HTMLReactParser(html, options) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n  if (html === '') {\n    return [];\n  }\n  options = options || {};\n  return domToReact(htmlToDOM(html, options.htmlparser2 || domParserOptions), options);\n}\nHTMLReactParser.domToReact = domToReact;\nHTMLReactParser.htmlToDOM = htmlToDOM;\nHTMLReactParser.attributesToProps = attributesToProps;\n\n// domhandler\nHTMLReactParser.Comment = domhandler.Comment;\nHTMLReactParser.Element = domhandler.Element;\nHTMLReactParser.ProcessingInstruction = domhandler.ProcessingInstruction;\nHTMLReactParser.Text = domhandler.Text;\n\n// support CommonJS and ES Modules\nmodule.exports = HTMLReactParser;\nHTMLReactParser.default = HTMLReactParser;","map":{"version":3,"names":["domhandler","require","htmlToDOM","attributesToProps","domToReact","default","domParserOptions","lowerCaseAttributeNames","HTMLReactParser","html","options","TypeError","htmlparser2","Comment","Element","ProcessingInstruction","Text","module","exports"],"sources":["C:/Users/joaki/OneDrive/Escritorio/Develop/Proyectos personales/Food/PI-Main_food/client/node_modules/html-react-parser/index.js"],"sourcesContent":["var domhandler = require('domhandler');\r\nvar htmlToDOM = require('html-dom-parser');\r\n\r\nvar attributesToProps = require('./lib/attributes-to-props');\r\nvar domToReact = require('./lib/dom-to-react');\r\n\r\n// support backwards compatibility for ES Module\r\nhtmlToDOM =\r\n  /* istanbul ignore next */\r\n  typeof htmlToDOM.default === 'function' ? htmlToDOM.default : htmlToDOM;\r\n\r\nvar domParserOptions = { lowerCaseAttributeNames: false };\r\n\r\n/**\r\n * Converts HTML string to React elements.\r\n *\r\n * @param {string} html - HTML string.\r\n * @param {object} [options] - Parser options.\r\n * @param {object} [options.htmlparser2] - htmlparser2 options.\r\n * @param {object} [options.library] - Library for React, Preact, etc.\r\n * @param {Function} [options.replace] - Replace method.\r\n * @returns {JSX.Element|JSX.Element[]|string} - React element(s), empty array, or string.\r\n */\r\nfunction HTMLReactParser(html, options) {\r\n  if (typeof html !== 'string') {\r\n    throw new TypeError('First argument must be a string');\r\n  }\r\n  if (html === '') {\r\n    return [];\r\n  }\r\n  options = options || {};\r\n  return domToReact(\r\n    htmlToDOM(html, options.htmlparser2 || domParserOptions),\r\n    options\r\n  );\r\n}\r\n\r\nHTMLReactParser.domToReact = domToReact;\r\nHTMLReactParser.htmlToDOM = htmlToDOM;\r\nHTMLReactParser.attributesToProps = attributesToProps;\r\n\r\n// domhandler\r\nHTMLReactParser.Comment = domhandler.Comment;\r\nHTMLReactParser.Element = domhandler.Element;\r\nHTMLReactParser.ProcessingInstruction = domhandler.ProcessingInstruction;\r\nHTMLReactParser.Text = domhandler.Text;\r\n\r\n// support CommonJS and ES Modules\r\nmodule.exports = HTMLReactParser;\r\nHTMLReactParser.default = HTMLReactParser;\r\n"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,YAAY,CAAC;AACtC,IAAIC,SAAS,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAE1C,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,2BAA2B,CAAC;AAC5D,IAAIG,UAAU,GAAGH,OAAO,CAAC,oBAAoB,CAAC;;AAE9C;AACAC,SAAS,GACP;AACA,OAAOA,SAAS,CAACG,OAAO,KAAK,UAAU,GAAGH,SAAS,CAACG,OAAO,GAAGH,SAAS;AAEzE,IAAII,gBAAgB,GAAG;EAAEC,uBAAuB,EAAE;AAAM,CAAC;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAACC,IAAI,EAAEC,OAAO,EAAE;EACtC,IAAI,OAAOD,IAAI,KAAK,QAAQ,EAAE;IAC5B,MAAM,IAAIE,SAAS,CAAC,iCAAiC,CAAC;EACxD;EACA,IAAIF,IAAI,KAAK,EAAE,EAAE;IACf,OAAO,EAAE;EACX;EACAC,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EACvB,OAAON,UAAU,CACfF,SAAS,CAACO,IAAI,EAAEC,OAAO,CAACE,WAAW,IAAIN,gBAAgB,CAAC,EACxDI,OAAO,CACR;AACH;AAEAF,eAAe,CAACJ,UAAU,GAAGA,UAAU;AACvCI,eAAe,CAACN,SAAS,GAAGA,SAAS;AACrCM,eAAe,CAACL,iBAAiB,GAAGA,iBAAiB;;AAErD;AACAK,eAAe,CAACK,OAAO,GAAGb,UAAU,CAACa,OAAO;AAC5CL,eAAe,CAACM,OAAO,GAAGd,UAAU,CAACc,OAAO;AAC5CN,eAAe,CAACO,qBAAqB,GAAGf,UAAU,CAACe,qBAAqB;AACxEP,eAAe,CAACQ,IAAI,GAAGhB,UAAU,CAACgB,IAAI;;AAEtC;AACAC,MAAM,CAACC,OAAO,GAAGV,eAAe;AAChCA,eAAe,CAACH,OAAO,GAAGG,eAAe"},"metadata":{},"sourceType":"script"}