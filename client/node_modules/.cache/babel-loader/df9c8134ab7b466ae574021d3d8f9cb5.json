{"ast":null,"code":"export default function Validations(type, errors, setErrors) {\n  const validateURL = url => {\n    return /^(ftp|http|https):\\/\\/[^ \"]+$/.test(url);\n  };\n\n  // Recipe Name Validation:\n\n  if (type.name.length > 30) {\n    setErrors({\n      ...errors,\n      name: \"The title must have at most 30 characters\"\n    });\n  }\n  if (typeof type.name !== 'string') {\n    setErrors({\n      ...errors,\n      name: \"The title can only contain letters\"\n    });\n  }\n  if (type.name.length < 30 && typeof type.name === 'string') {\n    setErrors({\n      ...errors,\n      name: \"\"\n    });\n  }\n\n  // Recipe Price Validation:\n\n  if (type.name.length > 30) {\n    setErrors({\n      ...errors,\n      name: \"The title must have at most 30 characters\"\n    });\n  }\n  if (typeof type.price !== 'number') {\n    setErrors({\n      ...errors,\n      price: \"The price can only contain numbers\"\n    });\n  }\n}\n_c = Validations;\nvar _c;\n$RefreshReg$(_c, \"Validations\");","map":{"version":3,"names":["Validations","type","errors","setErrors","validateURL","url","test","name","length","price","_c","$RefreshReg$"],"sources":["/home/j0aki/Desktop/Develop/Henry/PI-Food-main/client/src/components/Form/Validations.js"],"sourcesContent":["export default function Validations (type, errors, setErrors) {\n    const validateURL = (url) => {\n        return /^(ftp|http|https):\\/\\/[^ \"]+$/.test(url);\n    }\n\n    // Recipe Name Validation:\n\n    if (type.name.length > 30) {\n        setErrors({\n          ...errors,\n          name: \"The title must have at most 30 characters\",\n        });\n    }\n    if (typeof type.name !== 'string') {\n        setErrors({ \n            ...errors,\n            name: \"The title can only contain letters\"\n        });\n    }\n    if (type.name.length < 30 && typeof type.name === 'string') {\n        setErrors({ \n            ...errors,\n            name: \"\"\n        });\n    }\n\n    // Recipe Price Validation:\n\n    if (type.name.length > 30) {\n        setErrors({\n            ...errors,\n            name: \"The title must have at most 30 characters\",\n        });\n    }\n    if (typeof type.price !== 'number') {\n        setErrors({ \n            ...errors,\n            price: \"The price can only contain numbers\"\n        });\n    }\n}"],"mappings":"AAAA,eAAe,SAASA,WAAWA,CAAEC,IAAI,EAAEC,MAAM,EAAEC,SAAS,EAAE;EAC1D,MAAMC,WAAW,GAAIC,GAAG,IAAK;IACzB,OAAO,+BAA+B,CAACC,IAAI,CAACD,GAAG,CAAC;EACpD,CAAC;;EAED;;EAEA,IAAIJ,IAAI,CAACM,IAAI,CAACC,MAAM,GAAG,EAAE,EAAE;IACvBL,SAAS,CAAC;MACR,GAAGD,MAAM;MACTK,IAAI,EAAE;IACR,CAAC,CAAC;EACN;EACA,IAAI,OAAON,IAAI,CAACM,IAAI,KAAK,QAAQ,EAAE;IAC/BJ,SAAS,CAAC;MACN,GAAGD,MAAM;MACTK,IAAI,EAAE;IACV,CAAC,CAAC;EACN;EACA,IAAIN,IAAI,CAACM,IAAI,CAACC,MAAM,GAAG,EAAE,IAAI,OAAOP,IAAI,CAACM,IAAI,KAAK,QAAQ,EAAE;IACxDJ,SAAS,CAAC;MACN,GAAGD,MAAM;MACTK,IAAI,EAAE;IACV,CAAC,CAAC;EACN;;EAEA;;EAEA,IAAIN,IAAI,CAACM,IAAI,CAACC,MAAM,GAAG,EAAE,EAAE;IACvBL,SAAS,CAAC;MACN,GAAGD,MAAM;MACTK,IAAI,EAAE;IACV,CAAC,CAAC;EACN;EACA,IAAI,OAAON,IAAI,CAACQ,KAAK,KAAK,QAAQ,EAAE;IAChCN,SAAS,CAAC;MACN,GAAGD,MAAM;MACTO,KAAK,EAAE;IACX,CAAC,CAAC;EACN;AACJ;AAACC,EAAA,GAxCuBV,WAAW;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}