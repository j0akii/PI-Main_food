{"ast":null,"code":"var React = require('react');\nvar attributesToProps = require('./attributes-to-props');\nvar utilities = require('./utilities');\nvar setStyleProp = utilities.setStyleProp;\nvar canTextBeChildOfNode = utilities.canTextBeChildOfNode;\n\n/**\r\n * Converts DOM nodes to JSX element(s).\r\n *\r\n * @param {DomElement[]} nodes - DOM nodes.\r\n * @param {object} [options={}] - Options.\r\n * @param {Function} [options.replace] - Replacer.\r\n * @param {object} [options.library] - Library (React, Preact, etc.).\r\n * @returns - String or JSX element(s).\r\n */\nfunction domToReact(nodes, options) {\n  options = options || {};\n  var library = options.library || React;\n  var cloneElement = library.cloneElement;\n  var createElement = library.createElement;\n  var isValidElement = library.isValidElement;\n  var result = [];\n  var node;\n  var isWhitespace;\n  var hasReplace = typeof options.replace === 'function';\n  var replaceElement;\n  var props;\n  var children;\n  var trim = options.trim;\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    node = nodes[i];\n\n    // replace with custom React element (if present)\n    if (hasReplace) {\n      replaceElement = options.replace(node);\n      if (isValidElement(replaceElement)) {\n        // set \"key\" prop for sibling elements\n        // https://fb.me/react-warning-keys\n        if (len > 1) {\n          replaceElement = cloneElement(replaceElement, {\n            key: replaceElement.key || i\n          });\n        }\n        result.push(replaceElement);\n        continue;\n      }\n    }\n    if (node.type === 'text') {\n      isWhitespace = !node.data.trim().length;\n      if (isWhitespace && node.parent && !canTextBeChildOfNode(node.parent)) {\n        // We have a whitespace node that can't be nested in its parent\n        // so skip it\n        continue;\n      }\n      if (trim && isWhitespace) {\n        // Trim is enabled and we have a whitespace node\n        // so skip it\n        continue;\n      }\n\n      // We have a text node that's not whitespace and it can be nested\n      // in its parent so add it to the results\n      result.push(node.data);\n      continue;\n    }\n    props = node.attribs;\n    if (skipAttributesToProps(node)) {\n      setStyleProp(props.style, props);\n    } else if (props) {\n      props = attributesToProps(props, node.name);\n    }\n    children = null;\n    switch (node.type) {\n      case 'script':\n      case 'style':\n        // prevent text in <script> or <style> from being escaped\n        // https://reactjs.org/docs/dom-elements.html#dangerouslysetinnerhtml\n        if (node.children[0]) {\n          props.dangerouslySetInnerHTML = {\n            __html: node.children[0].data\n          };\n        }\n        break;\n      case 'tag':\n        // setting textarea value in children is an antipattern in React\n        // https://reactjs.org/docs/forms.html#the-textarea-tag\n        if (node.name === 'textarea' && node.children[0]) {\n          props.defaultValue = node.children[0].data;\n        } else if (node.children && node.children.length) {\n          // continue recursion of creating React elements (if applicable)\n          children = domToReact(node.children, options);\n        }\n        break;\n\n      // skip all other cases (e.g., comment)\n      default:\n        continue;\n    }\n\n    // set \"key\" prop for sibling elements\n    // https://fb.me/react-warning-keys\n    if (len > 1) {\n      props.key = i;\n    }\n    result.push(createElement(node.name, props, children));\n  }\n  return result.length === 1 ? result[0] : result;\n}\n\n/**\r\n * Determines whether DOM element attributes should be transformed to props.\r\n * Web Components should not have their attributes transformed except for `style`.\r\n *\r\n * @param {DomElement} node\r\n * @returns - Whether node attributes should be converted to props.\r\n */\nfunction skipAttributesToProps(node) {\n  return utilities.PRESERVE_CUSTOM_ATTRIBUTES && node.type === 'tag' && utilities.isCustomComponent(node.name, node.attribs);\n}\nmodule.exports = domToReact;","map":{"version":3,"names":["React","require","attributesToProps","utilities","setStyleProp","canTextBeChildOfNode","domToReact","nodes","options","library","cloneElement","createElement","isValidElement","result","node","isWhitespace","hasReplace","replace","replaceElement","props","children","trim","i","len","length","key","push","type","data","parent","attribs","skipAttributesToProps","style","name","dangerouslySetInnerHTML","__html","defaultValue","PRESERVE_CUSTOM_ATTRIBUTES","isCustomComponent","module","exports"],"sources":["C:/Users/joaki/OneDrive/Escritorio/Develop/Proyectos personales/Food/PI-Main_food/client/node_modules/html-react-parser/lib/dom-to-react.js"],"sourcesContent":["var React = require('react');\r\nvar attributesToProps = require('./attributes-to-props');\r\nvar utilities = require('./utilities');\r\n\r\nvar setStyleProp = utilities.setStyleProp;\r\nvar canTextBeChildOfNode = utilities.canTextBeChildOfNode;\r\n\r\n/**\r\n * Converts DOM nodes to JSX element(s).\r\n *\r\n * @param {DomElement[]} nodes - DOM nodes.\r\n * @param {object} [options={}] - Options.\r\n * @param {Function} [options.replace] - Replacer.\r\n * @param {object} [options.library] - Library (React, Preact, etc.).\r\n * @returns - String or JSX element(s).\r\n */\r\nfunction domToReact(nodes, options) {\r\n  options = options || {};\r\n\r\n  var library = options.library || React;\r\n  var cloneElement = library.cloneElement;\r\n  var createElement = library.createElement;\r\n  var isValidElement = library.isValidElement;\r\n\r\n  var result = [];\r\n  var node;\r\n  var isWhitespace;\r\n  var hasReplace = typeof options.replace === 'function';\r\n  var replaceElement;\r\n  var props;\r\n  var children;\r\n  var trim = options.trim;\r\n\r\n  for (var i = 0, len = nodes.length; i < len; i++) {\r\n    node = nodes[i];\r\n\r\n    // replace with custom React element (if present)\r\n    if (hasReplace) {\r\n      replaceElement = options.replace(node);\r\n\r\n      if (isValidElement(replaceElement)) {\r\n        // set \"key\" prop for sibling elements\r\n        // https://fb.me/react-warning-keys\r\n        if (len > 1) {\r\n          replaceElement = cloneElement(replaceElement, {\r\n            key: replaceElement.key || i\r\n          });\r\n        }\r\n        result.push(replaceElement);\r\n        continue;\r\n      }\r\n    }\r\n\r\n    if (node.type === 'text') {\r\n      isWhitespace = !node.data.trim().length;\r\n\r\n      if (isWhitespace && node.parent && !canTextBeChildOfNode(node.parent)) {\r\n        // We have a whitespace node that can't be nested in its parent\r\n        // so skip it\r\n        continue;\r\n      }\r\n\r\n      if (trim && isWhitespace) {\r\n        // Trim is enabled and we have a whitespace node\r\n        // so skip it\r\n        continue;\r\n      }\r\n\r\n      // We have a text node that's not whitespace and it can be nested\r\n      // in its parent so add it to the results\r\n      result.push(node.data);\r\n      continue;\r\n    }\r\n\r\n    props = node.attribs;\r\n    if (skipAttributesToProps(node)) {\r\n      setStyleProp(props.style, props);\r\n    } else if (props) {\r\n      props = attributesToProps(props, node.name);\r\n    }\r\n\r\n    children = null;\r\n\r\n    switch (node.type) {\r\n      case 'script':\r\n      case 'style':\r\n        // prevent text in <script> or <style> from being escaped\r\n        // https://reactjs.org/docs/dom-elements.html#dangerouslysetinnerhtml\r\n        if (node.children[0]) {\r\n          props.dangerouslySetInnerHTML = {\r\n            __html: node.children[0].data\r\n          };\r\n        }\r\n        break;\r\n\r\n      case 'tag':\r\n        // setting textarea value in children is an antipattern in React\r\n        // https://reactjs.org/docs/forms.html#the-textarea-tag\r\n        if (node.name === 'textarea' && node.children[0]) {\r\n          props.defaultValue = node.children[0].data;\r\n        } else if (node.children && node.children.length) {\r\n          // continue recursion of creating React elements (if applicable)\r\n          children = domToReact(node.children, options);\r\n        }\r\n        break;\r\n\r\n      // skip all other cases (e.g., comment)\r\n      default:\r\n        continue;\r\n    }\r\n\r\n    // set \"key\" prop for sibling elements\r\n    // https://fb.me/react-warning-keys\r\n    if (len > 1) {\r\n      props.key = i;\r\n    }\r\n\r\n    result.push(createElement(node.name, props, children));\r\n  }\r\n\r\n  return result.length === 1 ? result[0] : result;\r\n}\r\n\r\n/**\r\n * Determines whether DOM element attributes should be transformed to props.\r\n * Web Components should not have their attributes transformed except for `style`.\r\n *\r\n * @param {DomElement} node\r\n * @returns - Whether node attributes should be converted to props.\r\n */\r\nfunction skipAttributesToProps(node) {\r\n  return (\r\n    utilities.PRESERVE_CUSTOM_ATTRIBUTES &&\r\n    node.type === 'tag' &&\r\n    utilities.isCustomComponent(node.name, node.attribs)\r\n  );\r\n}\r\n\r\nmodule.exports = domToReact;\r\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC5B,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AACxD,IAAIE,SAAS,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEtC,IAAIG,YAAY,GAAGD,SAAS,CAACC,YAAY;AACzC,IAAIC,oBAAoB,GAAGF,SAAS,CAACE,oBAAoB;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,UAAUA,CAACC,KAAK,EAAEC,OAAO,EAAE;EAClCA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EAEvB,IAAIC,OAAO,GAAGD,OAAO,CAACC,OAAO,IAAIT,KAAK;EACtC,IAAIU,YAAY,GAAGD,OAAO,CAACC,YAAY;EACvC,IAAIC,aAAa,GAAGF,OAAO,CAACE,aAAa;EACzC,IAAIC,cAAc,GAAGH,OAAO,CAACG,cAAc;EAE3C,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,IAAI;EACR,IAAIC,YAAY;EAChB,IAAIC,UAAU,GAAG,OAAOR,OAAO,CAACS,OAAO,KAAK,UAAU;EACtD,IAAIC,cAAc;EAClB,IAAIC,KAAK;EACT,IAAIC,QAAQ;EACZ,IAAIC,IAAI,GAAGb,OAAO,CAACa,IAAI;EAEvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGhB,KAAK,CAACiB,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;IAChDR,IAAI,GAAGP,KAAK,CAACe,CAAC,CAAC;;IAEf;IACA,IAAIN,UAAU,EAAE;MACdE,cAAc,GAAGV,OAAO,CAACS,OAAO,CAACH,IAAI,CAAC;MAEtC,IAAIF,cAAc,CAACM,cAAc,CAAC,EAAE;QAClC;QACA;QACA,IAAIK,GAAG,GAAG,CAAC,EAAE;UACXL,cAAc,GAAGR,YAAY,CAACQ,cAAc,EAAE;YAC5CO,GAAG,EAAEP,cAAc,CAACO,GAAG,IAAIH;UAC7B,CAAC,CAAC;QACJ;QACAT,MAAM,CAACa,IAAI,CAACR,cAAc,CAAC;QAC3B;MACF;IACF;IAEA,IAAIJ,IAAI,CAACa,IAAI,KAAK,MAAM,EAAE;MACxBZ,YAAY,GAAG,CAACD,IAAI,CAACc,IAAI,CAACP,IAAI,EAAE,CAACG,MAAM;MAEvC,IAAIT,YAAY,IAAID,IAAI,CAACe,MAAM,IAAI,CAACxB,oBAAoB,CAACS,IAAI,CAACe,MAAM,CAAC,EAAE;QACrE;QACA;QACA;MACF;MAEA,IAAIR,IAAI,IAAIN,YAAY,EAAE;QACxB;QACA;QACA;MACF;;MAEA;MACA;MACAF,MAAM,CAACa,IAAI,CAACZ,IAAI,CAACc,IAAI,CAAC;MACtB;IACF;IAEAT,KAAK,GAAGL,IAAI,CAACgB,OAAO;IACpB,IAAIC,qBAAqB,CAACjB,IAAI,CAAC,EAAE;MAC/BV,YAAY,CAACe,KAAK,CAACa,KAAK,EAAEb,KAAK,CAAC;IAClC,CAAC,MAAM,IAAIA,KAAK,EAAE;MAChBA,KAAK,GAAGjB,iBAAiB,CAACiB,KAAK,EAAEL,IAAI,CAACmB,IAAI,CAAC;IAC7C;IAEAb,QAAQ,GAAG,IAAI;IAEf,QAAQN,IAAI,CAACa,IAAI;MACf,KAAK,QAAQ;MACb,KAAK,OAAO;QACV;QACA;QACA,IAAIb,IAAI,CAACM,QAAQ,CAAC,CAAC,CAAC,EAAE;UACpBD,KAAK,CAACe,uBAAuB,GAAG;YAC9BC,MAAM,EAAErB,IAAI,CAACM,QAAQ,CAAC,CAAC,CAAC,CAACQ;UAC3B,CAAC;QACH;QACA;MAEF,KAAK,KAAK;QACR;QACA;QACA,IAAId,IAAI,CAACmB,IAAI,KAAK,UAAU,IAAInB,IAAI,CAACM,QAAQ,CAAC,CAAC,CAAC,EAAE;UAChDD,KAAK,CAACiB,YAAY,GAAGtB,IAAI,CAACM,QAAQ,CAAC,CAAC,CAAC,CAACQ,IAAI;QAC5C,CAAC,MAAM,IAAId,IAAI,CAACM,QAAQ,IAAIN,IAAI,CAACM,QAAQ,CAACI,MAAM,EAAE;UAChD;UACAJ,QAAQ,GAAGd,UAAU,CAACQ,IAAI,CAACM,QAAQ,EAAEZ,OAAO,CAAC;QAC/C;QACA;;MAEF;MACA;QACE;IAAS;;IAGb;IACA;IACA,IAAIe,GAAG,GAAG,CAAC,EAAE;MACXJ,KAAK,CAACM,GAAG,GAAGH,CAAC;IACf;IAEAT,MAAM,CAACa,IAAI,CAACf,aAAa,CAACG,IAAI,CAACmB,IAAI,EAAEd,KAAK,EAAEC,QAAQ,CAAC,CAAC;EACxD;EAEA,OAAOP,MAAM,CAACW,MAAM,KAAK,CAAC,GAAGX,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASkB,qBAAqBA,CAACjB,IAAI,EAAE;EACnC,OACEX,SAAS,CAACkC,0BAA0B,IACpCvB,IAAI,CAACa,IAAI,KAAK,KAAK,IACnBxB,SAAS,CAACmC,iBAAiB,CAACxB,IAAI,CAACmB,IAAI,EAAEnB,IAAI,CAACgB,OAAO,CAAC;AAExD;AAEAS,MAAM,CAACC,OAAO,GAAGlC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}