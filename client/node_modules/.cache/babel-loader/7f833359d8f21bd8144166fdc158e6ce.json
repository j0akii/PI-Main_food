{"ast":null,"code":"export default function Validations(type, errors, setErrors) {\n  const validateURL = /^(ftp|http|https):\\/\\/[^ \"]+$/;\n  const validateName = /^[A-Za-z]+$/;\n  const validateNumber = /^\\d*$/;\n\n  // Recipe Name Validation:\n  if (type.name.length) {\n    console.log(validateName.test(type.name));\n    if (type.name.length > 30) {\n      console.log(typeof type.name === \"string\");\n      setErrors({\n        ...errors,\n        name: \"* The title must have at most 30 characters\"\n      });\n    } else if (validateName.test(type.name) === false) {\n      setErrors({\n        ...errors,\n        name: \"* The title can only contain letters\"\n      });\n    } else {\n      setErrors({\n        ...errors,\n        name: \"\"\n      });\n    }\n  }\n\n  // Recipe Price Validation:\n\n  if (type.price.length) {\n    if (validateNumber.test(type.price) === false) {\n      setErrors({\n        ...errors,\n        price: \"* The price can only contain numbers\"\n      });\n    } else if (type.price.length > 9) {\n      setErrors({\n        ...errors,\n        price: \"* The price is too big\"\n      });\n    } else {\n      setErrors({\n        ...errors,\n        price: \"\"\n      });\n    }\n  }\n\n  // Recipe Image Validation:\n\n  if (type.image.length) {\n    if (validateURL.test(type.image) === false) {\n      setErrors({\n        ...errors,\n        image: \"* The image url its invalid\"\n      });\n    } else {\n      setErrors({\n        ...errors,\n        image: \"\"\n      });\n    }\n  }\n\n  // Recipe Health Score Validation:\n\n  if (type.healthScore.length) {\n    if (typeof type.healthScore !== \"number\") {\n      setErrors({\n        ...errors,\n        healthScore: \"The Health Score can only contain numbers\"\n      });\n    }\n    if (type.healthScore.value > 100) {\n      setErrors({\n        ...errors,\n        healthScore: \"The Health Score is too much\"\n      });\n    }\n    if (type.healthScore.value < 100 && typeof type.healthScore === \"number\") {\n      setErrors({\n        ...errors,\n        healthScore: \"\"\n      });\n    }\n  }\n}\n_c = Validations;\nvar _c;\n$RefreshReg$(_c, \"Validations\");","map":{"version":3,"names":["Validations","type","errors","setErrors","validateURL","validateName","validateNumber","name","length","console","log","test","price","image","healthScore","value","_c","$RefreshReg$"],"sources":["/home/j0aki/Desktop/Develop/Henry/PI-Food-main/client/src/components/Form/Validations.js"],"sourcesContent":["    export default function Validations (type, errors, setErrors) {\n    const validateURL = /^(ftp|http|https):\\/\\/[^ \"]+$/;\n    const validateName = /^[A-Za-z]+$/;\n    const validateNumber = /^\\d*$/;\n\n    // Recipe Name Validation:\n    if (type.name.length) {\n        console.log(validateName.test(type.name));\n        if (type.name.length > 30) {\n        console.log(typeof type.name === \"string\");\n            setErrors({\n                ...errors,\n                name: \"* The title must have at most 30 characters\",\n            });\n        }\n        else if (validateName.test(type.name) === false) {\n            setErrors({\n                ...errors,\n                name: \"* The title can only contain letters\",\n            });\n        }\n        else {\n          setErrors({\n            ...errors,\n            name: \"\",\n          });\n        }\n    }\n\n    // Recipe Price Validation:\n\n    if (type.price.length) {\n        if (validateNumber.test(type.price) === false) {\n            setErrors({\n                ...errors,\n                price: \"* The price can only contain numbers\",\n            });\n        }\n        else if (type.price.length > 9) {\n            setErrors({\n                ...errors,\n                price: \"* The price is too big\",\n            });\n        }\n        else {\n            setErrors({\n                ...errors,\n                price: \"\",\n            });\n        }\n    }\n\n    // Recipe Image Validation:\n\n    if (type.image.length) {\n        if (validateURL.test(type.image) === false) {\n            setErrors({\n                ...errors,\n                image: \"* The image url its invalid\"\n            });\n        }\n        else {\n            setErrors({ \n                ...errors,\n                image: \"\"\n            });\n        }\n    }\n\n    // Recipe Health Score Validation:\n\n        if (type.healthScore.length) {\n            if (typeof type.healthScore !== \"number\") {\n                setErrors({\n                    ...errors,\n                    healthScore: \"The Health Score can only contain numbers\",\n                });\n            }\n            if (type.healthScore.value > 100) {\n                setErrors({\n                    ...errors,\n                    healthScore: \"The Health Score is too much\",\n                });\n            }\n            if (\n            type.healthScore.value < 100 &&\n            typeof type.healthScore === \"number\"\n            ) {\n                setErrors({\n                    ...errors,\n                    healthScore: \"\",\n                });\n            }\n        }\n}"],"mappings":"AAAI,eAAe,SAASA,WAAWA,CAAEC,IAAI,EAAEC,MAAM,EAAEC,SAAS,EAAE;EAC9D,MAAMC,WAAW,GAAG,+BAA+B;EACnD,MAAMC,YAAY,GAAG,aAAa;EAClC,MAAMC,cAAc,GAAG,OAAO;;EAE9B;EACA,IAAIL,IAAI,CAACM,IAAI,CAACC,MAAM,EAAE;IAClBC,OAAO,CAACC,GAAG,CAACL,YAAY,CAACM,IAAI,CAACV,IAAI,CAACM,IAAI,CAAC,CAAC;IACzC,IAAIN,IAAI,CAACM,IAAI,CAACC,MAAM,GAAG,EAAE,EAAE;MAC3BC,OAAO,CAACC,GAAG,CAAC,OAAOT,IAAI,CAACM,IAAI,KAAK,QAAQ,CAAC;MACtCJ,SAAS,CAAC;QACN,GAAGD,MAAM;QACTK,IAAI,EAAE;MACV,CAAC,CAAC;IACN,CAAC,MACI,IAAIF,YAAY,CAACM,IAAI,CAACV,IAAI,CAACM,IAAI,CAAC,KAAK,KAAK,EAAE;MAC7CJ,SAAS,CAAC;QACN,GAAGD,MAAM;QACTK,IAAI,EAAE;MACV,CAAC,CAAC;IACN,CAAC,MACI;MACHJ,SAAS,CAAC;QACR,GAAGD,MAAM;QACTK,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;EACJ;;EAEA;;EAEA,IAAIN,IAAI,CAACW,KAAK,CAACJ,MAAM,EAAE;IACnB,IAAIF,cAAc,CAACK,IAAI,CAACV,IAAI,CAACW,KAAK,CAAC,KAAK,KAAK,EAAE;MAC3CT,SAAS,CAAC;QACN,GAAGD,MAAM;QACTU,KAAK,EAAE;MACX,CAAC,CAAC;IACN,CAAC,MACI,IAAIX,IAAI,CAACW,KAAK,CAACJ,MAAM,GAAG,CAAC,EAAE;MAC5BL,SAAS,CAAC;QACN,GAAGD,MAAM;QACTU,KAAK,EAAE;MACX,CAAC,CAAC;IACN,CAAC,MACI;MACDT,SAAS,CAAC;QACN,GAAGD,MAAM;QACTU,KAAK,EAAE;MACX,CAAC,CAAC;IACN;EACJ;;EAEA;;EAEA,IAAIX,IAAI,CAACY,KAAK,CAACL,MAAM,EAAE;IACnB,IAAIJ,WAAW,CAACO,IAAI,CAACV,IAAI,CAACY,KAAK,CAAC,KAAK,KAAK,EAAE;MACxCV,SAAS,CAAC;QACN,GAAGD,MAAM;QACTW,KAAK,EAAE;MACX,CAAC,CAAC;IACN,CAAC,MACI;MACDV,SAAS,CAAC;QACN,GAAGD,MAAM;QACTW,KAAK,EAAE;MACX,CAAC,CAAC;IACN;EACJ;;EAEA;;EAEI,IAAIZ,IAAI,CAACa,WAAW,CAACN,MAAM,EAAE;IACzB,IAAI,OAAOP,IAAI,CAACa,WAAW,KAAK,QAAQ,EAAE;MACtCX,SAAS,CAAC;QACN,GAAGD,MAAM;QACTY,WAAW,EAAE;MACjB,CAAC,CAAC;IACN;IACA,IAAIb,IAAI,CAACa,WAAW,CAACC,KAAK,GAAG,GAAG,EAAE;MAC9BZ,SAAS,CAAC;QACN,GAAGD,MAAM;QACTY,WAAW,EAAE;MACjB,CAAC,CAAC;IACN;IACA,IACAb,IAAI,CAACa,WAAW,CAACC,KAAK,GAAG,GAAG,IAC5B,OAAOd,IAAI,CAACa,WAAW,KAAK,QAAQ,EAClC;MACEX,SAAS,CAAC;QACN,GAAGD,MAAM;QACTY,WAAW,EAAE;MACjB,CAAC,CAAC;IACN;EACJ;AACR;AAACE,EAAA,GA9F2BhB,WAAW;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}