{"ast":null,"code":"import axios from 'axios';\nexport const GET_ALL_RECIPES = 'GET_ALL_RECIPES';\nexport const GET_ID_RECIPES = \"GET_ID_RECIPES\";\nexport const GET_NAME_RECIPES = \"GET_NAME_RECIPES\";\nexport const GET_ALL_DIETS = \"GET_ALL_DIETS\";\nexport const CREATE_RECIPE = \"CREATE_RECIPE\";\nexport const FILTER_DIETS = 'FILTER_DIETS';\nexport const UPDATE_SELECTED_DIETS = 'UPDATE_SELECTED_DIETS';\nexport const FILTER_TYPE = 'FILTER_TYPE';\nexport const ORDERING = 'ORDERING';\nexport const VALIDATION_ERRORS = 'VALIDATION_ERRORS';\nconst URL_END = 'http://localhost:3001';\n\n// Para llamar las recetas por id\n\nexport const getIdRecipes = id => {\n  return async dispatch => {\n    try {\n      const endPoint = `${URL_END}/recipes/${id}`;\n      const response = await axios.get(endPoint);\n      return dispatch({\n        type: GET_ID_RECIPES,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n};\n\n// Para llamar las recetas por nombre y si no se pasa nombre se llama a todas\n\nexport const getAllRecipes = name => {\n  return async dispatch => {\n    try {\n      const endPoint = name ? `${URL_END}/recipes?name=${name}` : `${URL_END}/recipes/`;\n      const response = await axios.get(endPoint);\n      return dispatch({\n        type: GET_NAME_RECIPES,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(error.message);\n      throw error;\n    }\n  };\n};\n\n// Para llamar a todas las dietas\n\nexport const getAllDiets = () => {\n  return async dispatch => {\n    try {\n      const endPoint = `${URL_END}/diets/`;\n      const response = await axios(endPoint);\n      return dispatch({\n        type: GET_ALL_DIETS,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n};\n\n// Para crear una receta\n\nexport const createRecipe = obj => {\n  return async dispatch => {\n    try {\n      const endPoint = `${URL_END}/diets/`;\n      const response = await axios.post(endPoint, obj);\n      return dispatch({\n        type: CREATE_RECIPE,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n};\n\n// Para ordenar las recetas\n\nexport const orderRecipes = value => {\n  return {\n    type: ORDERING,\n    payload: value\n  };\n};\n\n// Para saber cuales son las dietas seleccionadas para el filtro\n\nexport const updateSelectedDiets = selectedDiets => {\n  return {\n    type: UPDATE_SELECTED_DIETS,\n    payload: {\n      selectedDiets\n    }\n  };\n};\n\n// Para filtrar por dietas\n\nexport const filterDietsRecipes = () => {\n  return {\n    type: FILTER_DIETS\n  };\n};\n\n// Para filtrar por tipo\n\nexport const filterTypeRecipes = value => {\n  return {\n    type: FILTER_TYPE,\n    payload: value\n  };\n};\n\n// Para guardar los errores de las validaciones del form\n\nexport const setValidationErrors = obj => {\n  return {\n    type: VALIDATION_ERRORS,\n    payload: obj\n  };\n};","map":{"version":3,"names":["axios","GET_ALL_RECIPES","GET_ID_RECIPES","GET_NAME_RECIPES","GET_ALL_DIETS","CREATE_RECIPE","FILTER_DIETS","UPDATE_SELECTED_DIETS","FILTER_TYPE","ORDERING","VALIDATION_ERRORS","URL_END","getIdRecipes","id","dispatch","endPoint","response","get","type","payload","data","error","console","log","message","getAllRecipes","name","getAllDiets","createRecipe","obj","post","orderRecipes","value","updateSelectedDiets","selectedDiets","filterDietsRecipes","filterTypeRecipes","setValidationErrors"],"sources":["/home/j0aki/Desktop/Develop/Henry/PI-Food-main/client/src/redux/actions.js"],"sourcesContent":["import axios from 'axios';\n\nexport const GET_ALL_RECIPES = 'GET_ALL_RECIPES';\nexport const GET_ID_RECIPES = \"GET_ID_RECIPES\";\nexport const GET_NAME_RECIPES = \"GET_NAME_RECIPES\";\nexport const GET_ALL_DIETS = \"GET_ALL_DIETS\";\nexport const CREATE_RECIPE = \"CREATE_RECIPE\";\nexport const FILTER_DIETS = 'FILTER_DIETS';\nexport const UPDATE_SELECTED_DIETS = 'UPDATE_SELECTED_DIETS';\nexport const FILTER_TYPE = 'FILTER_TYPE';\nexport const ORDERING = 'ORDERING';\nexport const VALIDATION_ERRORS = 'VALIDATION_ERRORS';\n\nconst URL_END = 'http://localhost:3001';\n\n\n\n// Para llamar las recetas por id\n\nexport const getIdRecipes = (id) => {\n  return async (dispatch) => {\n    try {\n      const endPoint = `${URL_END}/recipes/${id}`;\n      const response = await axios.get(endPoint);\n      return dispatch({\n        type: GET_ID_RECIPES,\n        payload: response.data,\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n};\n\n// Para llamar las recetas por nombre y si no se pasa nombre se llama a todas\n\nexport const getAllRecipes = (name) => {\n  return async (dispatch) => {\n    try {\n      const endPoint = name\n        ? `${URL_END}/recipes?name=${name}`\n        : `${URL_END}/recipes/`;\n      const response = await axios.get(endPoint);\n      return dispatch({\n        type: GET_NAME_RECIPES,\n        payload: response.data,\n      });\n    } catch (error) {\n      console.log(error.message);\n      throw error;\n    }\n  };\n};\n\n// Para llamar a todas las dietas\n\nexport const getAllDiets = () => {\n   return async (dispatch) => {\n     try {\n       const endPoint = `${URL_END}/diets/`;\n       const response = await axios(endPoint);\n       return dispatch({\n         type: GET_ALL_DIETS,\n         payload: response.data,\n       });\n     } catch (error) {\n       console.log(error.message);\n     }\n   };\n};\n\n// Para crear una receta\n\nexport const createRecipe = (obj) => {\n  return async (dispatch) => {\n    try {\n      const endPoint = `${URL_END}/diets/`;\n      const response = await axios.post(endPoint, obj);\n      return dispatch({\n        type: CREATE_RECIPE,\n        payload: response.data,\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n};\n\n// Para ordenar las recetas\n\nexport const orderRecipes = (value) => {\n  return {\n    type: ORDERING,\n    payload: value,\n  }\n}\n\n// Para saber cuales son las dietas seleccionadas para el filtro\n\nexport const updateSelectedDiets = (selectedDiets) => {\n  return {\n    type: UPDATE_SELECTED_DIETS,\n    payload: { selectedDiets },\n  }\n}\n\n// Para filtrar por dietas\n\nexport const filterDietsRecipes = () => {\n  return {\n    type: FILTER_DIETS,\n  }\n}\n\n// Para filtrar por tipo\n\nexport const filterTypeRecipes = (value) => {\n  return {\n    type: FILTER_TYPE,\n    payload: value,\n  }\n}\n\n// Para guardar los errores de las validaciones del form\n\nexport const setValidationErrors = (obj) => {\n  return {\n    type: VALIDATION_ERRORS,\n    payload: obj,\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}